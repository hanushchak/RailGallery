@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User)) // Check if the user is signed in and siplay the greetings
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Author" asp-action="Index" asp-route-username="@User.Identity.Name" title="User Profile">Hi @User.Identity.Name!</a>
        </li>
        @if (User.IsInRole("Moderator")) // If the user is moderator, display the link to admin panel
        {
            <li class="nav-item">
                <a class="nav-link text-danger" asp-area="" asp-controller="Admin" asp-action="Index">Admin Panel</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Upload" asp-action="">Upload Photo</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else // If the user is not authenticated, display sign up and log in links
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
